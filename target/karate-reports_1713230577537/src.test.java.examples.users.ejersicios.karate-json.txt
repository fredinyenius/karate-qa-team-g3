{"failedCount":1,"prefixedPath":"src\/test\/java\/examples\/users\/ejersicios.feature","packageQualifiedName":"src.test.java.examples.users.ejersicios","loopIndex":-1,"relativePath":"src\/test\/java\/examples\/users\/ejersicios.feature","scenarioResults":[{"sectionIndex":4,"stepResults":[{"result":{"nanos":46147200,"millis":46.1472,"status":"passed"},"step":{"endLine":45,"line":38,"prefix":"*","docString":"{\n  'userId': 1,\n  'title': 'Post de prueba',\n  'body': 'Post de prueba'\n}","index":0,"text":"def body ="},"stepLog":"19:53:58.156 karate.env system property was: null \n"},{"result":{"nanos":518400,"millis":0.5184,"status":"passed"},"step":{"line":46,"prefix":"Given","index":1,"text":"url \"https:\/\/jsonplaceholder.typicode.com\""}},{"result":{"nanos":286700,"millis":0.2867,"status":"passed"},"step":{"line":47,"prefix":"And","index":2,"text":"path \"\/posts\""}},{"result":{"nanos":4645400,"millis":4.6454,"status":"passed"},"step":{"line":48,"prefix":"And","index":3,"text":"request body"}},{"result":{"nanos":1146240500,"millis":1146.2405,"status":"passed"},"step":{"line":49,"prefix":"When","index":4,"text":"method post"},"stepLog":"19:53:58.886 request:\n1 > POST https:\/\/jsonplaceholder.typicode.com\/posts\n1 > Content-Type: application\/json; charset=UTF-8\n1 > Content-Length: 61\n1 > Host: jsonplaceholder.typicode.com\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_401)\n1 > Accept-Encoding: gzip,deflate\n{\"userId\":1,\"title\":\"Post de prueba\",\"body\":\"Post de prueba\"}\n\n19:53:59.382 response time in milliseconds: 494\n1 < 201\n1 < Date: Tue, 16 Apr 2024 00:53:59 GMT\n1 < Content-Type: application\/json; charset=utf-8\n1 < Content-Length: 87\n1 < Connection: keep-alive\n1 < Report-To: {\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https:\/\/nel.heroku.com\/reports?ts=1713228839&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=QMc2xa24QpfQrrC1WYELhjDTB8%2F07LuzOqqikSlxxEw%3D\"}]}\n1 < Reporting-Endpoints: heroku-nel=https:\/\/nel.heroku.com\/reports?ts=1713228839&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=QMc2xa24QpfQrrC1WYELhjDTB8%2F07LuzOqqikSlxxEw%3D\n1 < Nel: {\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}\n1 < X-Powered-By: Express\n1 < X-Ratelimit-Limit: 1000\n1 < X-Ratelimit-Remaining: 999\n1 < X-Ratelimit-Reset: 1713228892\n1 < Vary: Origin, X-HTTP-Method-Override, Accept-Encoding\n1 < Access-Control-Allow-Credentials: true\n1 < Cache-Control: no-cache\n1 < Pragma: no-cache\n1 < Expires: -1\n1 < Access-Control-Expose-Headers: Location\n1 < Location: https:\/\/jsonplaceholder.typicode.com\/posts\/101\n1 < X-Content-Type-Options: nosniff\n1 < Etag: W\/\"57-ibLi49RweUyi9XcMMoKoQ\/l6cg8\"\n1 < Via: 1.1 vegur\n1 < CF-Cache-Status: DYNAMIC\n1 < Server: cloudflare\n1 < CF-RAY: 87503395bb18b06a-ATL\n1 < alt-svc: h3=\":443\"; ma=86400\n{\n  \"userId\": 1,\n  \"title\": \"Post de prueba\",\n  \"body\": \"Post de prueba\",\n  \"id\": 101\n}\n\n"},{"result":{"nanos":15700,"millis":0.0157,"status":"passed"},"step":{"line":50,"prefix":"Then","index":5,"text":"status 201"}},{"result":{"nanos":1854300,"millis":1.8543,"status":"passed"},"step":{"line":51,"prefix":"*","index":6,"text":"print response"},"stepLog":"19:53:59.384 [print] {\n  \"userId\": 1,\n  \"title\": \"Post de prueba\",\n  \"body\": \"Post de prueba\",\n  \"id\": 101\n}\n \n"},{"result":{"nanos":6719100,"millis":6.7191,"status":"passed"},"step":{"line":52,"prefix":"And","index":7,"text":"match response.title == \"Post de prueba\""}},{"result":{"nanos":764900,"errorMessage":"match failed: EQUALS\n  $ | not equal (STRING:STRING)\n  'Post de prueba'\n  'Body de prueba'\n\nsrc\/test\/java\/examples\/users\/ejersicios.feature:53","millis":0.7649,"status":"failed"},"step":{"line":53,"prefix":"And","index":8,"text":"match response.body == \"Body de prueba\""},"stepLog":"19:53:59.393 src\/test\/java\/examples\/users\/ejersicios.feature:53\nAnd match response.body == \"Body de prueba\"\nmatch failed: EQUALS\n  $ | not equal (STRING:STRING)\n  'Post de prueba'\n  'Body de prueba'\n\nsrc\/test\/java\/examples\/users\/ejersicios.feature:53\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":54,"prefix":"And","index":9,"text":"match response.userId == 1"}}],"line":37,"description":"","durationMillis":1207.1922,"failed":true,"error":"match failed: EQUALS\n  $ | not equal (STRING:STRING)\n  'Post de prueba'\n  'Body de prueba'\n\nsrc\/test\/java\/examples\/users\/ejersicios.feature:53","executorName":"main","name":"Caso 13 - Crear un post con docString en variable","startTime":1713228838027,"refId":"[5:37]","endTime":1713228839393,"exampleIndex":-1}],"callDepth":0,"name":"Ejercicios clase 02","description":"","resultDate":"2024-04-15 07:53:59 PM","durationMillis":1207.1922,"passedCount":0}